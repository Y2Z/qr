m4_define([AT_PACKAGE_BUGREPORT], [sunshine@uberspace.net])
m4_define([AT_PACKAGE_STRING], [qr])

AT_INIT
AT_COLOR_TESTS
AT_BANNER([QR-Code tests])

## 1
AT_SETUP([generates proper QR Code])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background black -fill white -font "${FONT}" -pointsize 9 -interline-spacing -1 label:"$(./../../qr "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 2
AT_SETUP([generates proper QR Code using inverted colors])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background white -fill black -font "${FONT}" -pointsize 9 -interline-spacing -1 label:"\\$(./../../qr -i "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 3
AT_SETUP([generates proper QR Code using compact blocks])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background black -fill white -font "${FONT}" -pointsize 9 -interline-spacing -1 label:"$(./../../qr -c "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 4
AT_SETUP([generates proper QR Code using compact blocks and inverted colors])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background white -fill black -font "${FONT}" -pointsize 9 -interline-spacing -1 label:"\\$(./../../qr -ci "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 5
AT_SETUP([generates proper QR Code using large blocks])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background black -fill white -font "${FONT}" -pointsize 4 -interline-spacing -1 label:"$(./../../qr -l "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 6
AT_SETUP([generates proper QR Code using large blocks and inverted colors])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background white -fill black -font "${FONT}" -pointsize 4 -interline-spacing -1 label:"\\$(./../../qr -li "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 7
AT_SETUP([generates proper QR Code using large compact blocks])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background black -fill white -font "${FONT}" -pointsize 4 -interline-spacing -1 label:"$(./../../qr -lc "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 8
AT_SETUP([generates proper QR Code using large compact blocks and inverted colors])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background white -fill black -font "${FONT}" -pointsize 9 -interline-spacing -1 label:"\\$(./../../qr -lci "${INPUT}")" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 9
AT_SETUP([generates proper QR Code with default settings using stdin])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([
  convert -background black -fill white -font "${FONT}" -pointsize 9 -interline-spacing -1 label:"$(echo "${INPUT}" | ./../../qr)" png:- | zbarimg -q png:- | grep -q "QR-Code:${INPUT}" || exit 1
], [0], [], [])
AT_CLEANUP

## 10
AT_SETUP([fails and prints help message when no arguments provided])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([./../../qr], [1], [], [
Error: no input specified

Usage: qr [[OPTIONS]] STRING
  or:  cat FILE | qr [[OPTIONS]]

Options:
  -m  QR mode       [[na8k]] (n = number, a = alphabet, 8 = 8-bit, k = Kanji)
  -v  QR version    [[1-40]]
  -e  QR EC level   [[lmqh]] or [[1-4]]
  -l  use two characters per block
  -c  compact mode for wide fonts
  -b  border width  [[1-4]] (the default is 1)
  -i  invert colors
  -p  force colorless output
  -h  print help (this message)

])
AT_CLEANUP

## 11
AT_SETUP([prints help message when ran with a help flag])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([./../../qr -h], [0], [
Usage: qr [[OPTIONS]] STRING
  or:  cat FILE | qr [[OPTIONS]]

Options:
  -m  QR mode       [[na8k]] (n = number, a = alphabet, 8 = 8-bit, k = Kanji)
  -v  QR version    [[1-40]]
  -e  QR EC level   [[lmqh]] or [[1-4]]
  -l  use two characters per block
  -c  compact mode for wide fonts
  -b  border width  [[1-4]] (the default is 1)
  -i  invert colors
  -p  force colorless output
  -h  print help (this message)

], [])
AT_CLEANUP

## 12
AT_SETUP([fails if the input is too long])
AT_KEYWORDS([qrcode])
AT_CHECK_UNQUOTED([./../../qr "${EXTRA_LONG_INPUT}"], [1], [], [
Error: failed to generate QR code
])
AT_CLEANUP
